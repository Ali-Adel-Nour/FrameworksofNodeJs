Why Use Sails.js:
Rapid Development: Sails.js provides a high level of abstraction and code generation, making it quick to build prototypes and minimum viable products (MVPs). It's a good choice for projects that require fast development and iteration.

Real-Time Capabilities: If you need real-time communication and WebSocket support, Sails.js has built-in support for WebSockets using Socket.io, making it easy to build real-time applications, chat systems, and collaborative tools.

Data-Oriented Development: Sails.js includes Waterline, which is an ORM/ODM adapter that supports various databases. It simplifies database integration and allows you to switch databases with minimal changes to your code.

Full-Stack Framework: Sails.js is a full-stack framework, providing both the backend and frontend setup. It integrates well with front-end frameworks like Angular, React, or Vue.js, allowing you to build end-to-end applications in one cohesive environment.

Active Community: Sails.js has an active and supportive community of developers. This means regular updates, bug fixes, and continuous improvement to the framework.

Why Not Use Sails.js:
Overhead for Simple Projects: Sails.js provides many features and is designed for large-scale applications. For small and simple projects, it may introduce unnecessary complexity and overhead.

Learning Curve: Sails.js follows its conventions and may require some time to get accustomed to its structure and how it handles different components. If you or your team is already proficient in another framework, there might be a learning curve.

Real-Time Not Needed: If your application does not require real-time communication or WebSocket support, the real-time capabilities of Sails.js might be overkill for your project.

Limited Customization: While Sails.js is highly customizable, it does follow a certain architecture. If you have unique requirements that deviate significantly from the framework's conventions, you may find it challenging to customize certain aspects.

Active Development: As of my last update in September 2021, while Sails.js had an active community, it is essential to consider whether it continues to receive updates and security fixes in the future. It's always a good practice to use frameworks that are actively maintained and supported.

In summary, Sails.js is an excellent choice for real-time applications, large-scale projects, and rapid prototyping. However, for smaller projects with simpler requirements or projects that do not need real-time capabilities, you might consider other more lightweight frameworks. Always evaluate your project's specific needs and consider the strengths and weaknesses of the framework before making a decision.